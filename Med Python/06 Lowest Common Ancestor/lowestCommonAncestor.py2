#!/usr/bin/env python

"""
Tree to hardcode
    30
    |
  ____
  |   |
  8   52
  |
____
|   |
3  20
    |
   ____
  |   |
  10 29
"""
import sys

"""
Using the hardcoded tree 'node'
and an input number we return a list of all parent nodes
"""
def ancestors(number):
	a_list = []
	node = (30,(8,3,(20,10,29)),52) #hardocded tree

	while node[0] != number:
		a_list.append(node[0])
		if number < node[0]:
			node = node[1]
		else:
			node = node[2]
		if number == node:
			break
	return a_list[::-1]

"""
Given 2 lists we return the common parents
"""
def intersection(list1,list2):
	for x in list2:
		for y in list1:
			if x == y:
				return x

def main():

	with open(sys.argv[1]) as f:
		for l in f:
			if len(l) > 1: #ignores the blank lines
				l = l.split()
				print intersection(ancestors(int(l[0])),ancestors(int(l[1])))				

if __name__=="__main__":
   main()